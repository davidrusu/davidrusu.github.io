Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Header = Elm.Header.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var update = F2(function (action,
   model) {
      return function () {
         switch (action.ctor)
         {case "NoOp": return model;}
         _U.badCase($moduleName,
         "between lines 27 and 28");
      }();
   });
   var ModifyHeader = function (a) {
      return {ctor: "ModifyHeader"
             ,_0: a};
   };
   var viewHeader = F2(function (a,
   m) {
      return A2($Header.view,
      A2($Signal.forwardTo,
      a,
      ModifyHeader),
      m.header);
   });
   var view = F2(function (address,
   model) {
      return A2($Html.div,
      _L.fromArray([$Html$Attributes.$class("content")]),
      _L.fromArray([A2(viewHeader,
                   address,
                   model)
                   ,A2($Html.div,
                   _L.fromArray([$Html$Attributes.$class("greeter")]),
                   _L.fromArray([$Html.text("hey ;)")]))]));
   });
   var NoOp = {ctor: "NoOp"};
   var actionMailbox = $Signal.mailbox(NoOp);
   var Model = function (a) {
      return {_: {},header: a};
   };
   var statsPath = "http://davidrusu.github.io/mastery/";
   var projectsPath = "https://github.com/davidrusu";
   var basePath = "https://davidrusu.github.io";
   var teasPath = A2($Basics._op["++"],
   basePath,
   "/teas.html");
   var initHeader = A3($Header.init,
   {ctor: "_Tuple2"
   ,_0: "David Rusu"
   ,_1: basePath},
   _L.fromArray([{ctor: "_Tuple2"
                 ,_0: "Projects"
                 ,_1: projectsPath}
                ,{ctor: "_Tuple2"
                 ,_0: "Stats"
                 ,_1: statsPath}
                ,{ctor: "_Tuple2"
                 ,_0: "Teas"
                 ,_1: teasPath}]),
   -1);
   var init = {_: {}
              ,header: initHeader};
   var models = A3($Signal.foldp,
   update,
   init,
   actionMailbox.signal);
   var main = A2($Signal.map,
   view(actionMailbox.address),
   models);
   _elm.Main.values = {_op: _op
                      ,basePath: basePath
                      ,projectsPath: projectsPath
                      ,statsPath: statsPath
                      ,teasPath: teasPath
                      ,Model: Model
                      ,initHeader: initHeader
                      ,init: init
                      ,NoOp: NoOp
                      ,ModifyHeader: ModifyHeader
                      ,actionMailbox: actionMailbox
                      ,update: update
                      ,viewHeader: viewHeader
                      ,view: view
                      ,models: models
                      ,main: main};
   return _elm.Main.values;
};